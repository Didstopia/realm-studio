#!groovy

@Library('realm-ci') _

jobWrapper {
  stage('Bump version and tag commit') {
    node('docker') {
      doCheckout()

      docker.image('node:6.11.2').inside("-e HOME=/tmp -v /etc/passwd:/etc/passwd:ro") {
        // Set the email and name used when committing
        sh 'git config --global user.email "ci@realm.io"'
        sh 'git config --global user.name "Jenkins CI"'
        // Bump the version and tag the branch
        // Using --no-git-tag-version because the default does not add the package-lock.json
        nextVersion = sh script: "npm version --no-git-tag-version ${NEXT_VERSION}", returnStdout: true
        // Push the change to GitHub
        input(message: "Push ${nextVersion} and start a release?", id: 'push')
        // Add the package.json and package-lock.json and commit
        sh "git add package.json package-lock.json && git commit -m 'Prepare version ${nextVersion}'"
        sshagent(['realm-ci-ssh']) {
          // Push with tags
          sh "git push --follow-tags origin HEAD"
        }
        // Start a release job
        build(
          job: 'realm-studio/release',
          parameters: [
            [$class: 'GitParameterValue', name: 'VERSION_TAG', value: nextVersion]
          ],
          propagate: false,
          wait: false
        )
      }
    }
  }
}

def doCheckout() {
  return checkout([
    $class: 'GitSCM',
    branches: [[name: 'origin/master']],
    doGenerateSubmoduleConfigurations: false,
    extensions: [
      [$class: 'WipeWorkspace'],
      [$class: 'CleanCheckout'],
    ],
    gitTool: 'native git',
    userRemoteConfigs: [[
      credentialsId: 'realm-ci-ssh',
      name: 'origin',
      refspec: '+refs/tags/*:refs/remotes/origin/tags/* +refs/heads/*:refs/remotes/origin/*',
      url: 'git@github.com:realm/realm-studio.git'
    ]]
  ])
}
